{"ast":null,"code":"var _jsxFileName = \"/home/renato/\\xC1rea de Trabalho/Projetos/noteapp/src/components/StudentsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { ModalStateContext } from \"../providers/State\";\nimport \"../styles/componentsStyles/StudentsList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentsList() {\n  _s();\n\n  const modalEffect = useContext(ModalStateContext);\n  const [checkedButtons, setCheckedButtons] = useState([]);\n  var isNotPresent = false;\n\n  function handleCallButton(id, isBlocked) {\n    var buttonNum = document.getElementById(id);\n    var buttonNotPresent = document.getElementById(`buttonImg${id}`);\n\n    if ((buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.className) === \"buttonUncheck\" && isBlocked === false) {\n      buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.remove('buttonUncheck');\n      buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.add('buttonCheck');\n      setCheckedButtons([...checkedButtons, id]);\n      buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.setAttribute(\"disabled\", \"disabled\");\n      rollCallVerificantion();\n      return;\n    }\n\n    if (isBlocked === true && isNotPresent === false) {\n      setCheckedButtons([...checkedButtons, id]);\n      buttonClassRemover(id, true);\n      rollCallVerificantion();\n      isNotPresent = true;\n      return;\n    }\n\n    buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.removeAttribute(\"disabled\");\n    var oldButtons = checkedButtons;\n    var newButtons = oldButtons.filter(x => x != id);\n    setCheckedButtons(newButtons);\n    buttonClassRemover(id, false);\n  }\n\n  function handleNotPresentButton(id) {\n    var buttonNotPresent = document.getElementById(`buttonImg${id}`);\n    var presentButton = document.getElementById(id);\n\n    if ((buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.className) === \"buttonClassSelected\") {\n      buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.classList.remove('buttonClassSelected');\n      buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.classList.add('none');\n      presentButton === null || presentButton === void 0 ? void 0 : presentButton.removeAttribute(\"disabled\");\n      isNotPresent = true;\n      handleCallButton(id, true);\n      return;\n    }\n\n    presentButton === null || presentButton === void 0 ? void 0 : presentButton.setAttribute(\"disabled\", \"disabled\");\n    buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.classList.remove('none');\n    buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.classList.add('buttonClassSelected');\n    handleCallButton(id, true);\n  }\n\n  function buttonClassRemover(id, isBlocked) {\n    var buttonNum = document.getElementById(id);\n\n    if (isBlocked === true) {\n      buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.remove('buttonUnCheck');\n      buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.add('buttonBlock');\n      return;\n    }\n\n    buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.remove('buttonBlock');\n    buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.remove('buttonCheck');\n    buttonNum === null || buttonNum === void 0 ? void 0 : buttonNum.classList.add('buttonUncheck');\n  }\n\n  function rollCallVerificantion() {\n    if (checkedButtons.length === 7) {\n      modalEffect.setModalState(\"modalCompleteOn\");\n      resetButtons();\n    }\n  }\n\n  function resetButtons() {\n    setCheckedButtons([]);\n\n    for (var i = 1; i < 9; i++) {\n      let buttonNum = String(i);\n      buttonClassRemover(buttonNum, false);\n      var buttonNotPresent = document.getElementById(`buttonImg${i}`);\n      var presentButton = document.getElementById(buttonNum);\n      presentButton === null || presentButton === void 0 ? void 0 : presentButton.removeAttribute(\"disabled\");\n      buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.classList.remove('buttonClassSelected');\n      buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.classList.add('none');\n      buttonNotPresent === null || buttonNotPresent === void 0 ? void 0 : buttonNotPresent.removeAttribute(\"disabled\");\n    }\n  }\n\n  var find;\n  var menuData = [{\n    \"studentId\": \"1\",\n    \"name\": \"teste\"\n  }];\n\n  function mapArray() {\n    function arr() {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    }\n\n    return arr;\n  }\n\n  function getMenuItems() {\n    let menuItems = [];\n\n    for (var i = 1; i < 9; i++) {\n      let buttonNum = String(i);\n      menuItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: `buttonImg${buttonNum}`,\n          className: \"none\",\n          onClick: () => handleNotPresentButton(buttonNum)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.tarkett-image.com/large/TH_25121916_25131916_25126916_25136916_001.jpg\",\n          alt: \"profileImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"menuData.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonUncheck\",\n          onClick: () => handleCallButton(buttonNum, false),\n          id: buttonNum,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this));\n    }\n\n    console.log(\"right\");\n    return menuItems;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test\",\n    className: \"studentsList\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mapArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StudentsList, \"ywAJ6aT0sROK3weF6OnmBIItacg=\");\n\n_c = StudentsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentsList\");","map":{"version":3,"sources":["/home/renato/√Årea de Trabalho/Projetos/noteapp/src/components/StudentsList.tsx"],"names":["useContext","useState","ModalStateContext","StudentsList","modalEffect","checkedButtons","setCheckedButtons","isNotPresent","handleCallButton","id","isBlocked","buttonNum","document","getElementById","buttonNotPresent","className","classList","remove","add","setAttribute","rollCallVerificantion","buttonClassRemover","removeAttribute","oldButtons","newButtons","filter","x","handleNotPresentButton","presentButton","length","setModalState","resetButtons","i","String","find","menuData","mapArray","arr","getMenuItems","menuItems","push","console","log"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { isBlock } from \"typescript\";\nimport { ModalStateContext } from \"../providers/State\";\nimport \"../styles/componentsStyles/StudentsList.css\"\n\nexport default function StudentsList() {\n\n    interface modalEffectProps {\n        modalState: string;\n        setModalState: (p: string) => void;\n    }\n\n    const modalEffect = useContext(ModalStateContext) as modalEffectProps;\n\n    const [ checkedButtons, setCheckedButtons ] = useState([] as any)\n\n    var isNotPresent = false;\n\n    function handleCallButton (id: string, isBlocked: boolean) {\n        var buttonNum = document.getElementById(id);\n        var buttonNotPresent = document.getElementById(`buttonImg${id}`);\n\n            if(buttonNum?.className === \"buttonUncheck\" && isBlocked === false) {\n            buttonNum?.classList.remove('buttonUncheck')\n            buttonNum?.classList.add('buttonCheck')\n            setCheckedButtons([...checkedButtons,id]);\n            buttonNotPresent?.setAttribute(\"disabled\",\"disabled\");\n            rollCallVerificantion();\n            return;\n        } if(isBlocked === true && isNotPresent === false ) {\n            setCheckedButtons([...checkedButtons,id]);\n            buttonClassRemover(id, true);\n            rollCallVerificantion();\n            isNotPresent = true;\n            return;\n        }\n\n        buttonNotPresent?.removeAttribute(\"disabled\");\n        var oldButtons = checkedButtons;\n        var newButtons = oldButtons.filter(x => x != id);\n        setCheckedButtons(newButtons);    \n        buttonClassRemover(id, false)\n    }\n\n    function handleNotPresentButton(id: string) {\n        var buttonNotPresent = document.getElementById(`buttonImg${id}`);\n        var presentButton = document.getElementById(id);\n\n        if(buttonNotPresent?.className === \"buttonClassSelected\") {\n            buttonNotPresent?.classList.remove('buttonClassSelected');\n            buttonNotPresent?.classList.add('none')\n            presentButton?.removeAttribute(\"disabled\");\n            isNotPresent = true;\n            handleCallButton(id, true)\n            return;\n        }\n\n        presentButton?.setAttribute(\"disabled\",\"disabled\");\n        buttonNotPresent?.classList.remove('none');\n        buttonNotPresent?.classList.add('buttonClassSelected')\n        handleCallButton(id, true)\n    }\n\n    function buttonClassRemover(id:string, isBlocked: boolean) {\n        var buttonNum = document.getElementById(id);\n\n        if(isBlocked === true) {\n            buttonNum?.classList.remove('buttonUnCheck')\n            buttonNum?.classList.add('buttonBlock')\n            return;\n        }\n            buttonNum?.classList.remove('buttonBlock')\n            buttonNum?.classList.remove('buttonCheck')\n            buttonNum?.classList.add('buttonUncheck')\n    }\n\n    function rollCallVerificantion() {\n      if (checkedButtons.length === 7) {\n        modalEffect.setModalState(\"modalCompleteOn\");\n        resetButtons();\n      }\n    }\n\n    function resetButtons() {\n        setCheckedButtons([]);\n        \n        for(var i = 1; i < 9; i++) {\n            let buttonNum = String(i) as any;\n            buttonClassRemover(buttonNum, false);\n            var buttonNotPresent = document.getElementById(`buttonImg${i}`);\n            var presentButton = document.getElementById(buttonNum);\n            presentButton?.removeAttribute(\"disabled\");\n            buttonNotPresent?.classList.remove('buttonClassSelected');\n            buttonNotPresent?.classList.add('none')\n            buttonNotPresent?.removeAttribute(\"disabled\");\n        }\n    }\n\n    var find;\n\n    var menuData = [\n        {\n            \"studentId\":\"1\",\n            \"name\":\"teste\"\n        }\n    ]\n\n    function mapArray() {\n       function arr () {\n        <div>\n\n        </div>\n       }\n            return arr;\n            \n    } \n\n    \n\n    function getMenuItems() {\n      let menuItems : any = [];\n        for (var i = 1; i < 9; i++) {\n        let buttonNum = String(i) as any;\n        menuItems.push(\n            <div className=\"student\">\n                <button \n                id={`buttonImg${buttonNum}`}\n                className=\"none\"\n                onClick={ () => handleNotPresentButton(buttonNum) }\n                >\n                </button>\n                <img src=\"https://media.tarkett-image.com/large/TH_25121916_25131916_25126916_25136916_001.jpg\" alt=\"profileImg\"/>\n                <p>menuData.name</p>\n                <button \n                className=\"buttonUncheck\" \n                onClick={() => handleCallButton(buttonNum, false)} \n                id={buttonNum}\n                >\n                    X\n                </button>\n            </div>\n\n        )\n            \n    } \n        console.log(\"right\")\n        return menuItems;\n    }\n\n\n    return (\n        <div id=\"test\" className=\"studentsList\">\n            <h1>\n                {mapArray}\n            </h1>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}